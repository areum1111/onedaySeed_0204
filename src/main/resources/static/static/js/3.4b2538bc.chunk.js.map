{"version":3,"file":"static/js/3.4b2538bc.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/login/NewUserPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n        const userName = useSelector((state) => state.login.userName);\n        const userName22 = localStorage.getItem(\"userName\");\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >\n                  {userName}님, 반가워요! // {userId}님, 반가워요!  //{userName22}(22)님, 반가워요!\n              </a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  &&  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n          {/*        <li className=\"nav-item\">*/}\n          {/*            <a href={'/lesson/main'} className=\"nav-link\">My Class</a>*/}\n          {/*            /!*    레슨 파일보고 페이지 맞게 연결*!/*/}\n          {/*        </li>*/}\n          {/*    </>*/}\n          {/*    :<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님, 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./LoginForm.css\"\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nconst NewUserPage=()=>{\n\n    const [newMember,setNewMember] = useState({\n        userId: \"\",\n        password: \"\",\n        userName: \"\",\n        phoneNum: \"\"\n    });\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/userNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new user info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const navigate = useNavigate();\n\n\n\n\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n\n        if (newMember.userId == null) {\n            alert(\"아이디를 입력해주세요.\");\n            return;\n        }\n        if (newMember.userId.length < 6 || newMember.userId.length > 12) {\n            alert(\"아이디는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n        if (newMember.password == null) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n        if (newMember.password.length < 6 || newMember.password.length > 12) {\n            alert(\"비밀번호는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n\n        if (newMember.userName == null) {\n            alert(\"이름을 입력해주세요.\");\n            return;\n        }\n        if (newMember.phoneNum == null) {\n            alert(\"전화번호를 입력해주세요.\");\n            return;\n        }\n        if (!/^\\d+$/.test(newMember.phoneNum)) {\n            alert(\"전화번호는 숫자만 입력해주세요.\");\n            return;\n        }\n\n\n\n        console.log(newMember.userId);\n        console.log(newMember.password);\n        console.log(newMember.userName);\n        console.log(newMember.phoneNum);\n\n        try {\n            const response = await axios.post(\"/api/userNew\", {\n                userId: newMember.userId,\n                password: newMember.password,\n                userName: newMember.userName,\n                phoneNum: newMember.phoneNum,\n\n            })\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n\n                const { userId, userName } = response.data;\n                localStorage.setItem(\"userName\", newMember.userName); // 사용자 이름을 로컬 스토리지에 저장\n                 alert(\"가지고 가는 아이디와 이름: \");\n                alert(userName);\n\n                fetchData();\n                navigate(\"/user/login\" ); //userName정보 가지고 가기\n                // navigate(\"/user/login\",{ state: { userName } }); //userName정보 가지고 가기\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n        }\n    };\n\n\n\n\n    return(\n      <BasicLaylout>\n\n      <div className=\"loginBox\">\n        <h1><b>회원가입</b></h1>\n          <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">아이디</span>\n            <input className=\"formInfo\" type=\"text\" id=\"id_val\" placeholder=\"아이디를 입력해주세요\"  name=\"userId\" onChange={handleInputChange} value={newMember.userId}/>\n       \n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" id=\"password_val\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" onChange={handleInputChange} value={newMember.password}/>\n\n            <span className=\"formName\" >이름</span>\n            <input className=\"formInfo\" type=\"text\" id=\"name_val\" placeholder=\"이름을 입력해주세요\" name=\"userName\" onChange={handleInputChange} value={newMember.userName} />\n\n            <span className=\"formName\">전화번호</span>\n          <input className=\"formInfo\" type=\"text\" id=\"phoneNum_val\" placeholder=\"전화번호를 입력해주세요\" name=\"phoneNum\" onChange={handleInputChange} value={newMember.phoneNum}/>\n\n          <div className=\"loginBtn\">\n              <button type=\"submit\">회원가입</button>\n          </div>\n          </Form>\n      </div>\n      </BasicLaylout>\n      \n    );\n    }\nexport default NewUserPage;"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","userName","userName22","localStorage","getItem","isHostLoggedIn","hostLogin","hostNum","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","removeItem","logout","handleClickHostLogout","hostLogout","role","placeholder","NewUserPage","newMember","setNewMember","useState","password","phoneNum","fetchData","async","response","axios","get","data","error","console","log","useEffect","handleInputChange","e","name","value","target","prevNewMember","BasicLaylout","Form","onSubmit","preventDefault","length","alert","test","post","alertMessage","successMessage","setItem","request","message","onChange"],"sourceRoot":""}