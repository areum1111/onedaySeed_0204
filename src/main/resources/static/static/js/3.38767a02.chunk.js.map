{"version":3,"file":"static/js/3.38767a02.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/login/NewUserPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >{userId}님, 반가워요!</a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  ||  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n                  <li className=\"nav-item\">\n                      <a href={'/lesson/main'} className=\"nav-link\">My Class</a>\n                      {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              {/*</>*/}\n              {/*:<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              {/*</>*/}\n              {/*:<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              {/*</>*/}\n              {/*:<></>}*/}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님(호스트), 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import BasicLaylout from \"../../layouts/BasicLayout\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./LoginForm.css\"\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nconst NewUserPage=()=>{\n\n    const [newMember,setNewMember] = useState({});\n\n    const fetchData = async ()=> {\n        try{\n            const response = await axios.get(\"/api/userNew\");\n            setNewMember(response.data)\n        }catch(error){\n            console.log(\"Error fetching new user info : \", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n\n    const navigate = useNavigate();\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n\n\n\n\n\n        setNewMember((prevNewMember) => ({\n            ...prevNewMember,\n            [name]: value,\n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // 기본 폼 제출 방지\n\n\n        if (newMember.userId == null) {\n            alert(\"아이디를 입력해주세요.\");\n            return;\n        }\n        if (newMember.userId.length < 6 || newMember.userId.length > 12) {\n            alert(\"아이디는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n        if (newMember.password == null) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n        if (newMember.password.length < 6 || newMember.password.length > 12) {\n            alert(\"비밀번호는 6자리 이상 12자리 이하로 입력해주세요.\");\n            return;\n        }\n\n        if (newMember.userName == null) {\n            alert(\"이름을 입력해주세요.\");\n            return;\n        }\n        if (newMember.phoneNum == null) {\n            alert(\"전화번호를 입력해주세요.\");\n            return;\n        }\n        if (!/^\\d+$/.test(newMember.phoneNum)) {\n            alert(\"전화번호는 숫자만 입력해주세요.\");\n            return;\n        }\n\n\n\n        console.log(newMember.userId);\n        console.log(newMember.password);\n        console.log(newMember.userName);\n        console.log(newMember.phoneNum);\n\n        try {\n            const response = await axios.post(\"/api/userNew\", {\n                userId: newMember.userId,\n                password: newMember.password,\n                userName: newMember.userName,\n                phoneNum: newMember.phoneNum,\n\n            })\n            if (response.data.alertMessage) {\n                alert(response.data.alertMessage);\n            }\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n                fetchData();\n                navigate(\"/user/login\");\n            }\n        }catch (error){\n            if(error.response){\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n            }else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n        }\n    };\n\n\n\n\n    return(\n      <BasicLaylout>\n\n      <div className=\"loginBox\">\n        <h1><b>회원가입</b></h1>\n          <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">아이디</span>\n            <input className=\"formInfo\" type=\"text\" id=\"id_val\" placeholder=\"아이디를 입력해주세요\"  name=\"userId\" onChange={handleInputChange} value={newMember.userId}/>\n       \n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" id=\"password_val\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" onChange={handleInputChange} value={newMember.password}/>\n\n            <span className=\"formName\" >이름</span>\n            <input className=\"formInfo\" type=\"text\" id=\"name_val\" placeholder=\"이름을 입력해주세요\" name=\"userName\" onChange={handleInputChange} value={newMember.userName} />\n\n            <span className=\"formName\">전화번호</span>\n          <input className=\"formInfo\" type=\"text\" id=\"phoneNum_val\" placeholder=\"전화번호를 입력해주세요\" name=\"phoneNum\" onChange={handleInputChange} value={newMember.phoneNum}/>\n\n          <div className=\"loginBtn\">\n              <button type=\"submit\">회원가입</button>\n          </div>\n          </Form>\n      </div>\n      </BasicLaylout>\n      \n    );\n    }\nexport default NewUserPage;"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","isHostLoggedIn","hostLogin","hostNum","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","placeholder","NewUserPage","newMember","setNewMember","useState","fetchData","async","response","axios","get","data","error","console","log","useEffect","handleInputChange","e","name","value","target","prevNewMember","BasicLaylout","Form","onSubmit","preventDefault","length","alert","password","userName","phoneNum","test","post","alertMessage","successMessage","request","message","onChange"],"sourceRoot":""}