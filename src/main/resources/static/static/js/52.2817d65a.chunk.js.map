{"version":3,"file":"static/js/52.2817d65a.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","layouts/BasicLayout.js","pages/lesson/LessonForm.js"],"sourcesContent":["import {createSearchParams, Navigate, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginPostAsync, logout} from \"../slices/loginSlice\";\r\n\r\nconst useCustomLogin = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const loginState = useSelector(state => state.loginSlice) //로그인,로그아웃 했을 경우의 상태\r\n    const isLogin = loginState.userId ?true :false //로그인 여부\r\n    const doLogin = async (loginParam) => { //로그인 함수\r\n        const action = await dispatch(loginPostAsync(loginParam))\r\n\r\n        return action.payload\r\n    }\r\n\r\n    const doLogout =() => { //로그아웃 함수\r\n        dispatch(logout())\r\n    }\r\n\r\n    const moveToPath = (path) =>{ //페이지 이동\r\n        navigate({pathname:path},{replace:true})\r\n    }\r\n\r\n    const moveToLogin = () => { //로그인페이지로 이동\r\n        navigate({pathname:'/user/login'},{replace:true})\r\n    }\r\n\r\n    const moveToLoginReturn = () => { //로그인페이지로 이동 페이지(로그인해야지만 이용 가능한 페이지 클릭(이동시))\r\n        return<Navigate replace to=\"/user/login\" />\r\n    }\r\n\r\n    const exceptionHandle = (ex) =>{\r\n        console.log(\"Exception..........\")\r\n        console.log(ex)\r\n        const errorMsg = ex.response.data.error\r\n        const errorStr = createSearchParams({error:errorMsg}).toString()\r\n\r\n        if(errorMsg === 'REQUIRE_LOGIN'){\r\n            alert(\"로그인을 진행해주세요!\")\r\n            navigate({pathname:'/user/login',search:errorStr})\r\n            return\r\n        }\r\n        if(ex.response.data.error === \"ERROR_ACCESSDENIED\"){\r\n            alert(\"해당 메뉴를 사용할 권한이 없습니다.\")\r\n            navigate({pathname:'/user/login',search:errorStr})\r\n            return\r\n        }\r\n    }\r\n\r\n    return{loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\r\n}\r\nexport default useCustomLogin;","import { Link } from \"react-router-dom\";\r\nimport \"./BasicLayout.css\"\r\nimport BasicMenu from \"../components/menus/BasicMenu.js\";\r\nimport {useSelector} from \"react-redux\";\r\nimport useCustomLogin from \"../hooks/useCustomLogin\";\r\n\r\nconst BasicLayout = ({children}) => {\r\n\r\n    const {doLogout, moveToPath} =useCustomLogin()\r\n\r\n const handleClickLogout =()=>{\r\n        doLogout()\r\n     alert(\"로그아웃되었습니다.\")\r\n     moveToPath(\"/\")\r\n }\r\n\r\n    const loginState = useSelector(state => state.loginSlice)\r\n  return(\r\n    <>\r\n    \r\n    <header>\r\n    <nav class=\"navbar navbar-expand-lg\" id=\"nav\" >\r\n    <div class=\"container-fluid\" id=\"nav-form\">\r\n      <Link to = {'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</Link>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      < ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <Link to={'/about'} class=\"nav-link active\" aria-current=\"page\" >About Us</Link>\r\n        </li>\r\n\r\n          {/*로그인한 사용자에게만 보이게*/}\r\n          {loginState.id ?\r\n          <>\r\n        <li class=\"nav-item\">\r\n          <Link to={'/mypage'} class=\"nav-link\">My Page</Link>\r\n        </li>\r\n      </>\r\n        :<></>}\r\n\r\n          {/*로그인한 사용자에게만 보이게*/}\r\n          {loginState.id ?\r\n              <>\r\n                  <li class=\"nav-item\">\r\n                      <a onClick={handleClickLogout} className=\"nav-link\">Logout</a>\r\n                  </li>\r\n              </>\r\n              :<></>}\r\n\r\n\r\n\r\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\r\n          { ! loginState.id?\r\n              <>\r\n        <li class=\"nav-item\">\r\n          <Link to={\"/user/login\"} className=\"nav-link disabled\" aria-disabled=\"true\" >Login</Link>\r\n        </li>\r\n              </>: <></> }\r\n\r\n          \r\n      </ul>\r\n      <form class=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n </nav>\r\n <hr/>\r\n    </header>\r\n\r\n\r\n          <main>\r\n            {children}\r\n          </main>\r\n\r\n    <footer>\r\n    <hr/>\r\n      <div className=\"footer-body\">\r\n        <span><b>(주)원데이씨드</b> <br/>\r\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\r\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\r\n         </span> <br/>\r\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\r\n        </span>\r\n        <br/><br/><br/><br/>\r\n      </div>   \r\n    </footer>\r\n\r\n\r\n    </>\r\n\r\n  )\r\n}\r\nexport default BasicLayout;","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport BasicLayout from \"../../layouts/BasicLayout\"\r\nimport axios from 'axios';\r\n\r\nfunction LessonForm() {\r\n  const [lessonName, setLessonName] = useState(\"\");\r\n  const [lessonCategory, setLessonCategory] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [lessonLimited, setLessonLimited] = useState(\"\");\r\n  const [lessonSchedule, setLessonSchedule] = useState();\r\n  const [lessonStatus, setLessonStatus] = useState(\"\");\r\n  const [lessonRepImg, setLessonRepImg] = useState(null);\r\n  const [lessonDetailImg, setLessonDetailImg] = useState(null);\r\n\r\n  const handleInputChange = (e, setValue) => {\r\n    // input의 현재 값에 접근\r\n    const inputValue = e.target.value;\r\n    console.log(\"입력값 불러: \", inputValue)\r\n    // 상태 업데이트\r\n    setValue(inputValue);\r\n  };\r\n\r\n  const handleFileChange = (e, setFile) => {\r\n    // 파일 선택 시\r\n    const file = e.target.files[0];\r\n    console.log(\"파일 이름 불러\", file)\r\n\r\n    // 상태 업데이트\r\n    setFile(file);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // 기본 폼 제출 방지\r\n    e.persist();\r\n    const formData = new FormData();\r\n    formData.append('lessonName', lessonName);\r\n    formData.append('lessonCategory', lessonCategory);\r\n    formData.append('price', price);\r\n    formData.append('lessonLimited', lessonLimited);\r\n    formData.append('lessonSchedule', lessonSchedule);\r\n    formData.append('lessonStatus', lessonStatus);\r\n\r\n    const fileData = {\r\n      lessonRepImg,\r\n      lessonDetailImg\r\n    }\r\n\r\n    const allData = formData + fileData;\r\n\r\n    console.log(\"진짜 개짜증나네: \", allData)\r\n    axios.post('/api/lesson/new', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n      .then(response => {\r\n        console.log('서버로부터의 응답:', response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('에러 발생:', error);\r\n      });\r\n  }\r\n\r\n  // const handleFileChange = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   const formData = new FormData();\r\n  //   formData.append('lessonRepImg', lessonRepImg);\r\n  //   formData.append('lessonDetailImg', lessonDetailImg);\r\n\r\n  //   axios.post('/api/lesson/new', formData, {\r\n  //     headers: {\r\n  //       'Content-Type': 'multipart/form-data',\r\n  //     },\r\n  //   })\r\n  //     .then(response => {\r\n  //       console.log('서버로부터의 응답:', response.data);\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.error('에러 발생:', error);\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <BasicLayout>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n\r\n          <form onSubmit={handleSubmit} encType='multipart/form-data'>\r\n            <h1>클래스 등록 페이지입니다</h1><br></br>\r\n            <div>\r\n              <label>\r\n                <h4>클래스 이름</h4>\r\n                <input onChange={(e) => handleInputChange(e, setLessonName)} placeholder='제목을 입력해 주세요.' required />\r\n              </label>\r\n              <hr />\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <h4>카테고리</h4>\r\n                <input type='radio' value='cook' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} />\r\n                요리\r\n              </label>\r\n              <label>\r\n                <input type='radio' value='art' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} required />\r\n                미술\r\n              </label>\r\n              <label>\r\n                <input type='radio' value='music' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} />\r\n                음악\r\n              </label><br />\r\n              <label>\r\n                <input type='radio' value='sport' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} />\r\n                운동\r\n              </label>\r\n              <label>\r\n                <input type='radio' value='baking' name='category' onChange={(e) => handleInputChange(e, setLessonCategory)} />\r\n                베이킹\r\n              </label><br />\r\n              <hr />\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <h4>클래스 가격</h4>\r\n                <input type='number' onChange={(e) => handleInputChange(e, setPrice)} placeholder='숫자만 입력해 주세요.' required /><br />\r\n              </label>\r\n              <hr />\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <h4>제한 인원</h4>\r\n                <input type='number' onChange={(e) => handleInputChange(e, setLessonLimited)} placeholder='숫자만 입력해 주세요.' required /><br />\r\n              </label>\r\n              <hr />\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <h4>클래스 시작일</h4>\r\n                <input type='date' onChange={(e) => handleInputChange(e, setLessonSchedule)} required /><br />\r\n              </label>\r\n              <hr />\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <h4>판매 상태</h4>\r\n                <select onChange={(e) => handleInputChange(e, setLessonStatus)} defaultValue=\"\" required>\r\n                  <option value=\"\" disabled>선택</option>\r\n                  <option value='SELL'>판매중</option>\r\n                  <option value='SOLD_OUT'>품절</option>\r\n                </select><br />\r\n                <hr />\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <h4>이미지 등록</h4>\r\n                - 썸네일 사진<br />\r\n                <input type='file' name='lessonRepImg' onChange={(e) => handleFileChange(e, setLessonRepImg)} defaultValue=\"\" /><br />\r\n              </label>\r\n              <label>\r\n                - 상세 설명 사진<br />\r\n                <input type='file' name='lessonDetailImg' onChange={(e) => handleFileChange(e, setLessonDetailImg)} defaultValue=\"\" />\r\n              </label>\r\n            </div>\r\n            <br />\r\n\r\n            <button type='submit'>저장</button>\r\n\r\n          </form>\r\n        </div>\r\n      </BasicLayout>\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default LessonForm;"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","userId","doLogin","async","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","_jsx","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","createSearchParams","toString","alert","search","_ref","children","_jsxs","_Fragment","class","id","Link","className","type","onClick","handleClickLogout","role","placeholder","lessonName","setLessonName","useState","lessonCategory","setLessonCategory","price","setPrice","lessonLimited","setLessonLimited","lessonSchedule","setLessonSchedule","lessonStatus","setLessonStatus","lessonRepImg","setLessonRepImg","lessonDetailImg","setLessonDetailImg","handleInputChange","e","setValue","inputValue","target","value","handleFileChange","setFile","file","files","BasicLayout","style","display","justifyContent","alignItems","height","onSubmit","preventDefault","persist","formData","FormData","append","allData","axios","post","headers","then","catch","encType","onChange","required","name","defaultValue","disabled"],"sourceRoot":""}