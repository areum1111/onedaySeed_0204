{"version":3,"file":"static/js/790.0b094721.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","layouts/BasicLayout.js","pages/MyPage.js"],"sourcesContent":["import {createSearchParams, Navigate, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginPostAsync, logout} from \"../slices/loginSlice\";\r\n\r\nconst useCustomLogin = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const loginState = useSelector(state => state.loginSlice) //로그인,로그아웃 했을 경우의 상태\r\n    const isLogin = loginState.userId ?true :false //로그인 여부\r\n    const doLogin = async (loginParam) => { //로그인 함수\r\n        const action = await dispatch(loginPostAsync(loginParam))\r\n\r\n        return action.payload\r\n    }\r\n\r\n    const doLogout =() => { //로그아웃 함수\r\n        dispatch(logout())\r\n    }\r\n\r\n    const moveToPath = (path) =>{ //페이지 이동\r\n        navigate({pathname:path},{replace:true})\r\n    }\r\n\r\n    const moveToLogin = () => { //로그인페이지로 이동\r\n        navigate({pathname:'/user/login'},{replace:true})\r\n    }\r\n\r\n    const moveToLoginReturn = () => { //로그인페이지로 이동 페이지(로그인해야지만 이용 가능한 페이지 클릭(이동시))\r\n        return<Navigate replace to=\"/user/login\" />\r\n    }\r\n\r\n    const exceptionHandle = (ex) =>{\r\n        console.log(\"Exception..........\")\r\n        console.log(ex)\r\n        const errorMsg = ex.response.data.error\r\n        const errorStr = createSearchParams({error:errorMsg}).toString()\r\n\r\n        if(errorMsg === 'REQUIRE_LOGIN'){\r\n            alert(\"로그인을 진행해주세요!\")\r\n            navigate({pathname:'/user/login',search:errorStr})\r\n            return\r\n        }\r\n        if(ex.response.data.error === \"ERROR_ACCESSDENIED\"){\r\n            alert(\"해당 메뉴를 사용할 권한이 없습니다.\")\r\n            navigate({pathname:'/user/login',search:errorStr})\r\n            return\r\n        }\r\n    }\r\n\r\n    return{loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\r\n}\r\nexport default useCustomLogin;","import { Link } from \"react-router-dom\";\r\nimport \"./BasicLayout.css\"\r\nimport BasicMenu from \"../components/menus/BasicMenu.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useCustomLogin from \"../hooks/useCustomLogin\";\r\n\r\nconst BasicLayout = ({ children }) => {\r\n\r\n  const { doLogout, moveToPath } = useCustomLogin()\r\n\r\n  const handleClickLogout = () => {\r\n    doLogout()\r\n    alert(\"로그아웃되었습니다.\")\r\n    moveToPath(\"/\")\r\n  }\r\n\r\n  const loginState = useSelector(state => state.loginSlice)\r\n  return (\r\n    <>\r\n\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\r\n          <div className=\"container-fluid\" id=\"nav-form\">\r\n            <Link to={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</Link>\r\n                </li>\r\n\r\n                {/*로그인한 사용자에게만 보이게*/}\r\n                {loginState.id ?\r\n                  <>\r\n                    <li className=\"nav-item\">\r\n                      <Link to={'/mypage'} className=\"nav-link\">My Page</Link>\r\n                    </li>\r\n                  </>\r\n                  : <></>}\r\n\r\n                {/*로그인한 사용자에게만 보이게*/}\r\n                {loginState.id ?\r\n                  <>\r\n                    <li className=\"nav-item\">\r\n                      <a onClick={handleClickLogout} className=\"nav-link\">Logout</a>\r\n                    </li>\r\n                  </>\r\n                  : <></>}\r\n\r\n\r\n\r\n                {/* 로그인 전 사용자에게 '로그인' 보이게 */}\r\n                {!loginState.id ?\r\n                  <>\r\n                    <li className=\"nav-item\">\r\n                      <Link to={\"/user/login\"} className=\"nav-link disabled\" aria-disabled=\"true\" >Login</Link>\r\n                    </li>\r\n                  </> : <></>}\r\n\r\n\r\n              </ul>\r\n              <form className=\"d-flex\" role=\"search\">\r\n                <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <hr />\r\n      </header>\r\n\r\n\r\n      <main>\r\n        {children}\r\n      </main>\r\n\r\n      <footer>\r\n        <hr />\r\n        <div className=\"footer-body\">\r\n          <span><b>(주)원데이씨드</b> <br />\r\n            <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br />\r\n              사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br />\r\n            </span> <br />\r\n            <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\r\n          </span>\r\n          <br /><br /><br /><br />\r\n        </div>\r\n      </footer>\r\n\r\n\r\n    </>\r\n\r\n  )\r\n}\r\nexport default BasicLayout;","import { Link } from 'react-router-dom';\r\nimport BasicLaylout from \"../layouts/BasicLayout\";\r\n\r\nconst MyPage = ()=>{\r\n  return (\r\n\r\n    <>\r\n      <BasicLaylout>\r\n      <div >  My page</div>\r\n      </BasicLaylout>\r\n      </>\r\n\r\n  );\r\n}\r\n\r\nexport default MyPage;"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","userId","doLogin","async","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","_jsx","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","createSearchParams","toString","alert","search","_ref","children","_jsxs","_Fragment","className","id","Link","type","onClick","handleClickLogout","role","placeholder","MyPage","BasicLaylout"],"sourceRoot":""}