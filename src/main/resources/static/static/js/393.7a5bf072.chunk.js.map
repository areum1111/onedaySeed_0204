{"version":3,"file":"static/js/393.7a5bf072.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","layouts/BasicLayout.js","pages/lesson/LessonForm.js"],"sourcesContent":["import {createSearchParams, Navigate, useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginPostAsync, logout} from \"../slices/loginSlice\";\n\nconst useCustomLogin = () => {\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const loginState = useSelector(state => state.loginSlice) //로그인,로그아웃 했을 경우의 상태\n    const isLogin = loginState.userId ?true :false //로그인 여부\n    const doLogin = async (loginParam) => { //로그인 함수\n        const action = await dispatch(loginPostAsync(loginParam))\n\n        return action.payload\n    }\n\n    const doLogout =() => { //로그아웃 함수\n        dispatch(logout())\n    }\n\n    const moveToPath = (path) =>{ //페이지 이동\n        navigate({pathname:path},{replace:true})\n    }\n\n    const moveToLogin = () => { //로그인페이지로 이동\n        navigate({pathname:'/user/login'},{replace:true})\n    }\n\n    const moveToLoginReturn = () => { //로그인페이지로 이동 페이지(로그인해야지만 이용 가능한 페이지 클릭(이동시))\n        return<Navigate replace to=\"/user/login\" />\n    }\n\n    const exceptionHandle = (ex) =>{\n        console.log(\"Exception..........\")\n        console.log(ex)\n        const errorMsg = ex.response.data.error\n        const errorStr = createSearchParams({error:errorMsg}).toString()\n\n        if(errorMsg === 'REQUIRE_LOGIN'){\n            alert(\"로그인을 진행해주세요!\")\n            navigate({pathname:'/user/login',search:errorStr})\n            return\n        }\n        if(ex.response.data.error === \"ERROR_ACCESSDENIED\"){\n            alert(\"해당 메뉴를 사용할 권한이 없습니다.\")\n            navigate({pathname:'/user/login',search:errorStr})\n            return\n        }\n    }\n\n    return{loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\n}\nexport default useCustomLogin;","import { Link } from \"react-router-dom\";\nimport \"./basicLayout.css\"\nimport BasicMenu from \"../components/menus/BasicMenu.js\";\nimport {useSelector} from \"react-redux\";\nimport useCustomLogin from \"../hooks/useCustomLogin\";\n\nconst BasicLayout = ({children}) => {\n\n    const {doLogout, moveToPath} =useCustomLogin()\n\n const handleClickLogout =()=>{\n        doLogout()\n     alert(\"로그아웃되었습니다.\")\n     moveToPath(\"/\")\n }\n\n    const loginState = useSelector(state => state.loginSlice)\n  return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <Link to = {'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <Link to={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</Link>\n        </li>\n\n          {/*로그인한 사용자에게만 보이게*/}\n          {loginState.id ?\n          <>\n        <li className=\"nav-item\">\n          <Link to={'/mypage'} className=\"nav-link\">My Page</Link>\n        </li>\n      </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          {loginState.id ?\n              <>\n                  <li className=\"nav-item\">\n                      <a onClick={handleClickLogout} className=\"nav-link\">Logout</a>\n                  </li>\n              </>\n              :<></>}\n\n\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          { ! loginState.id?\n              <>\n        <li className=\"nav-item\">\n          <Link to={\"/user/login\"} className=\"nav-link disabled\" aria-disabled=\"true\" >Login</Link>\n        </li>\n              </>: <></> }\n\n          \n      </ul>\n      <form class=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport BasicLayout from \"../../layouts/BasicLayout\"\nimport axios from 'axios';\n\nfunction LessonForm() {\n  const [lessonName, setLessonName] = useState(\"\");\n  const [lessonCategory, setLessonCategory] = useState(\"\");\n  const [lessonPrice, setLessonPrice] = useState(\"\");\n  const [lessonLimited, setLessonLimited] = useState(\"\");\n  const [lessonStatus, setLessonStatus] = useState(\"\");\n\n  const handleInputChange = (e, setValue) => {\n    // input의 현재 값에 접근\n    const inputValue = e.target.value;\n\n    // 상태 업데이트\n    setValue(inputValue);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // 기본 폼 제출 방지\n    \n    const dataToSend = {\n      lessonName,\n      lessonCategory,\n      lessonPrice,\n      lessonLimited,\n      lessonStatus\n    };\n\n    axios.post('/api/lesson/new', dataToSend)\n    .then(response => {\n      console.log('서버로부터의 응답:', response.data);\n    })\n    .catch(error => {\n      console.error('에러 발생:', error);\n    });\n  }\n\n  return (\n    <div>\n      <BasicLayout>\n\n      <form onSubmit={handleSubmit}>\n\n        <input onChange={(e) => handleInputChange(e, setLessonName)} placeholder='레슨명' /><br />\n        <input onChange={(e) => handleInputChange(e, setLessonCategory)} placeholder='카테고리' /><br />\n        <input onChange={(e) => handleInputChange(e, setLessonPrice)} placeholder='가격' /><br />\n        <input onChange={(e) => handleInputChange(e, setLessonLimited)} placeholder='제한 인원' /><br />\n        <input onChange={(e) => handleInputChange(e, setLessonStatus)} placeholder='판매 상태' /><br />\n        <br />\n\n        <Button type='submit'>저장</Button>\n\n      </form>\n\n      </BasicLayout>\n    </div>\n\n  )\n\n}\n\nexport default LessonForm;"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","userId","doLogin","async","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","_jsx","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","createSearchParams","toString","alert","search","_ref","children","_jsxs","_Fragment","className","id","Link","type","onClick","handleClickLogout","class","role","placeholder","lessonName","setLessonName","useState","lessonCategory","setLessonCategory","lessonPrice","setLessonPrice","lessonLimited","setLessonLimited","lessonStatus","setLessonStatus","handleInputChange","e","setValue","target","value","BasicLayout","onSubmit","preventDefault","dataToSend","axios","post","then","catch","onChange","Button"],"sourceRoot":""}