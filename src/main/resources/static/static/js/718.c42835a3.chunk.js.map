{"version":3,"file":"static/js/718.c42835a3.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","layouts/BasicLayout.js","pages/cart/CartList.js","pages/cart/Cart.js"],"sourcesContent":["import {createSearchParams, Navigate, useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginPostAsync, logout} from \"../slices/loginSlice\";\n\nconst useCustomLogin = () => {\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const loginState = useSelector(state => state.loginSlice) //로그인,로그아웃 했을 경우의 상태\n    const isLogin = loginState.userId ?true :false //로그인 여부\n    const doLogin = async (loginParam) => { //로그인 함수\n        const action = await dispatch(loginPostAsync(loginParam))\n\n        return action.payload\n    }\n\n    const doLogout =() => { //로그아웃 함수\n        dispatch(logout())\n    }\n\n    const moveToPath = (path) =>{ //페이지 이동\n        navigate({pathname:path},{replace:true})\n    }\n\n    const moveToLogin = () => { //로그인페이지로 이동\n        navigate({pathname:'/user/login'},{replace:true})\n    }\n\n    const moveToLoginReturn = () => { //로그인페이지로 이동 페이지(로그인해야지만 이용 가능한 페이지 클릭(이동시))\n        return<Navigate replace to=\"/user/login\" />\n    }\n\n    const exceptionHandle = (ex) =>{\n        console.log(\"Exception..........\")\n        console.log(ex)\n        const errorMsg = ex.response.data.error\n        const errorStr = createSearchParams({error:errorMsg}).toString()\n\n        if(errorMsg === 'REQUIRE_LOGIN'){\n            alert(\"로그인을 진행해주세요!\")\n            navigate({pathname:'/user/login',search:errorStr})\n            return\n        }\n        if(ex.response.data.error === \"ERROR_ACCESSDENIED\"){\n            alert(\"해당 메뉴를 사용할 권한이 없습니다.\")\n            navigate({pathname:'/user/login',search:errorStr})\n            return\n        }\n    }\n\n    return{loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\n}\nexport default useCustomLogin;","import { Link } from \"react-router-dom\";\nimport \"./basicLayout.css\"\nimport BasicMenu from \"../components/menus/BasicMenu.js\";\nimport {useSelector} from \"react-redux\";\nimport useCustomLogin from \"../hooks/useCustomLogin\";\n\nconst BasicLayout = ({children}) => {\n\n    const {doLogout, moveToPath} =useCustomLogin()\n\n const handleClickLogout =()=>{\n        doLogout()\n     alert(\"로그아웃되었습니다.\")\n     moveToPath(\"/\")\n }\n\n    const loginState = useSelector(state => state.loginSlice)\n  return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <Link to = {'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <Link to={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</Link>\n        </li>\n\n          {/*로그인한 사용자에게만 보이게*/}\n          {loginState.id ?\n          <>\n        <li className=\"nav-item\">\n          <Link to={'/mypage'} className=\"nav-link\">My Page</Link>\n        </li>\n      </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          {loginState.id ?\n              <>\n                  <li className=\"nav-item\">\n                      <a onClick={handleClickLogout} className=\"nav-link\">Logout</a>\n                  </li>\n              </>\n              :<></>}\n\n\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          { ! loginState.id?\n              <>\n        <li className=\"nav-item\">\n          <Link to={\"/user/login\"} className=\"nav-link disabled\" aria-disabled=\"true\" >Login</Link>\n        </li>\n              </>: <></> }\n\n          \n      </ul>\n      <form class=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport CloseButton from 'react-bootstrap/CloseButton';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport './cartList.css';\n\nimport axios from \"axios\";\n\n// Cart에서 넘긴 item\nfunction CartList({ item, onItemDelete }) {\n\n    // 가격\n    const totalPrice = item.count * item.price;\n\n    // 인원 변동\n    const [personCount, setPersonCount] = useState(item.count);\n\n    const handleIncrease = () => {\n        setPersonCount(prevCount => prevCount + 1);\n    };\n\n    const handleDecrease = () => {\n        if (personCount > 1) {\n        setPersonCount(prevCount => prevCount - 1);\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault(); // 기본 폼 제출 방지\n\n        try {\n            const response = await axios.post('/api/cart', {\n                cartItemId: item.cartItemId,\n                lessonName: item.lessonName,\n                lessonSchedule: item.lessonSchedule,\n                count: personCount,\n                price: item.price,\n          });\n    \n            if (response.data.alertMessage) {\n              // 에러 또는 성공 메시지가 있으면 alert 창 띄우기\n              alert(response.data.alertMessage);\n            }\n        \n            if (response.data.successMessage) {\n              console.log('Form submitted successfully:', response.data.successMessage);\n              window.location.reload();\n            }\n          } catch (error) {\n              if (error.response) {\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                // 클라이언트에서 에러 메시지 처리 로직 추가\n              } else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n              } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n              }\n          }\n      };\n\n      // 삭제\n      const handleDelete = async () => {\n        try {\n          // 서버에 삭제 요청 전송\n          await axios.delete(`/api/cart/${item.cartItemId}`);\n          // 삭제된 아이템을 부모 컴포넌트에서 처리\n          onItemDelete(item.cartItemId);\n          window.location.reload();\n        } catch (error) {\n          console.error('Error deleting item:', error);\n        }\n      };\n\n      // 결제\n      const handleOrder = async () => {\n        if (window.confirm(`결제하려는 수업과 인원이 '${item.lessonName} ${item.count}명' 맞습니까?`)) {\n          try {\n            await axios.post(`/api/cart/order/${item.cartItemId}`);\n            alert(\"결제되었습니다.\");\n            window.location.reload();\n          } catch (error) {\n            if (error.response) {\n              console.error(error.response.data);\n            } else {\n              console.error(\"Error during the request\");\n            }\n            alert(\"결제 중 오류가 발생했습니다.\");\n          }\n        } else {\n          window.location.reload();\n        }\n      };\n\n    return (\n        <div className='all'>\n            <div className='thumb'>\n                <img src=\"/thumb.jpg\" width='300px' height='278px' />\n            </div>\n            <Form onSubmit={handleSubmit}>\n                <CloseButton className='closeButton' onClick={handleDelete}/>\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formGroupName\">\n                    <Form.Label column sm=\"3\">클래스</Form.Label>\n                    <Col sm=\"9\"><Form.Control plaintext readOnly value={item.lessonName}/></Col>\n                </Form.Group>\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formGroupDate\">\n                    <Form.Label column sm=\"3\">날짜</Form.Label>\n                    <Col sm=\"9\"><Form.Control plaintext readOnly value={item.lessonSchedule}/></Col>\n                </Form.Group>\n                <div className='caret'>\n                    <i className=\"bi bi-caret-down-fill\" onClick={handleDecrease} />\n                    <i className=\"bi bi-caret-up-fill\" onClick={handleIncrease} />\n                </div>\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formGroupPerson\">\n                    <Form.Label column sm=\"3\">인원</Form.Label>\n                    <Col sm=\"9\"><Form.Control value={personCount}/></Col>\n                </Form.Group>\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formGroupPrice\">\n                    <Form.Label column sm=\"3\">가격</Form.Label>\n                    <Col sm=\"9\"><Form.Control plaintext readOnly value={totalPrice}/></Col>\n                </Form.Group>\n                <Button id=\"modify\" variant=\"primary\" type=\"submit\">수정</Button>\n                <Button id=\"order\" variant=\"success\" onClick={handleOrder}>결제</Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default CartList;","import React, { useState, useEffect } from 'react';\nimport CartList from './CartList';\nimport './cartList.css';\nimport axios from \"axios\";\nimport BasicLayout from \"../../layouts/BasicLayout\"\n\nfunction Cart() {\n\n    const [cartItems, setCartItems] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            const response = await axios.get('/api/cart');\n            setCartItems(response.data);\n        } catch (error) {\n            console.error('Error fetching cart details:', error);\n        }\n    };\n    \n      useEffect(() => {\n        fetchData();\n      }, []);\n\n      const onItemDelete = (deletedItemId) => {\n        // 기존의 아이템 리스트에서 삭제된 아이템을 제거하는 로직\n        setCartItems((prevCartItems) =>\n          prevCartItems.filter((item) => item.cartItemId !== deletedItemId)\n        );\n      };\n      // filter 메소드는 JavaScript 배열 메소드 중 하나 /\n      // 원본 배열을 변경하지 않고, 주어진 함수의 조건을 만족하는 요소들로 이루어진 새로운 배열을 반환\n      \n      // (item) => item.cartItemId !== deletedItemId는 콜백 함수 /\n      // cartItemId가 deletedItemId와 다른 경우 true를 반환 > 새로운 배열에 포함\n\n    return (\n        <div>\n            <BasicLayout>\n            <h1 id=\"title\">장바구니</h1>\n            {/* key에는 고유값 */}\n            {cartItems.map((item) => (\n                <React.Fragment key={item.id}>\n                  <hr />\n                <CartList onItemDelete={onItemDelete} item={item} />\n                  <br />\n                </React.Fragment>\n            ))}\n            </BasicLayout>\n        </div>\n    );\n}\n\nexport default Cart;"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","userId","doLogin","async","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","_jsx","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","createSearchParams","toString","alert","search","_ref","children","_jsxs","_Fragment","className","id","Link","type","onClick","handleClickLogout","class","role","placeholder","item","onItemDelete","totalPrice","count","price","personCount","setPersonCount","useState","src","width","height","Form","onSubmit","event","preventDefault","axios","post","cartItemId","lessonName","lessonSchedule","alertMessage","successMessage","window","location","reload","request","message","CloseButton","delete","concat","Group","as","Row","controlId","Label","column","sm","Col","Control","plaintext","readOnly","value","handleDecrease","prevCount","handleIncrease","Button","variant","confirm","cartItems","setCartItems","useEffect","get","fetchData","deletedItemId","prevCartItems","filter","BasicLayout","map","React","CartList"],"sourceRoot":""}