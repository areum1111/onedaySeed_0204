{"version":3,"file":"static/js/731.372ff92f.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/login/UserLoginPage.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        // const userId = useSelector((state) => state.login.userId);\n        const userName = useSelector((state) => state.login.userName);\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >{userName}님, 반가워요!</a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  &&  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n          {/*        <li className=\"nav-item\">*/}\n          {/*            <a href={'/lesson/main'} className=\"nav-link\">My Class</a>*/}\n          {/*            /!*    레슨 파일보고 페이지 맞게 연결*!/*/}\n          {/*        </li>*/}\n          {/*    </>*/}\n          {/*    :<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님, 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import {Link, useNavigate} from \"react-router-dom\";\nimport BasicLaylout from \"../../layouts/BasicLayout\";\nimport \"./LoginForm.css\"\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {login as loginAction} from \"../../slices/loginSlice\";\nimport {Form} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\n\nconst initState={\n    userId:\"\",\n    password:\"\"\n}\nconst UserLoginPage =()=>{\n\n    const [login,setLogin] = useState({...initState});\n\n    const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const fetchData = async()=>{\n        try{\n            const response = await axios.get(\"/api/userLogin\");\n            setLogin(response.data);\n        }catch (error){\n            console.log('ERROR FETCHING USER LOGIN : ', error);\n        }\n    };\n\n    useEffect(() => {\n        const isLoggedIn = localStorage.getItem('isLoggedIn');\n        if (isLoggedIn) {\n            // 로그인 상태인 경우 홈페이지로 이동\n            navigate(\"/\");\n        }\n    }, [navigate]);\n\n\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setLogin((prevLogin) => ({\n            ...prevLogin,\n            [name]: value,\n        }));\n    };\n\n    // 서버로 사용자 ID 전송\n    const sendUserIdToServer = async (userId) => {\n        try {\n          await axios.post(\"/api/sendUserId\", { userId });\n        } catch (error) {\n          console.error('서버로 사용자 ID 전송 실패:', error);\n        }\n      };\n\n    const handleSubmit = async (e) => {\n\n        // 새로고침 방지\n        e.preventDefault();\n\n        if (!login.userId) {\n            alert(\"아이디를 입력해주세요.\");\n            return;\n        }\n        if (!login.password) {\n            alert(\"비밀번호를 입력해주세요.\");\n            return;\n        }\n\n        // console.log(login.userId);\n        // console.log(login.password);\n\n        try {\n            const response = await axios.post(\"/api/userLogin\", {\n                userId: login.userId,\n                password: login.password\n\n            });\n\n            if (response.data.alertMessage) {\n                // 에러 또는 성공 메시지가 있으면 alert 창 띄우기\n                alert(response.data.alertMessage);\n            }\n\n            // if (response.data.errorMessage) {\n            //     // 에러 메시지가 있는 경우, 해당 메시지를 alert 창에 표시\n            //     alert(JSON.stringify(response.data.errorMessage));\n            //     return;\n            // }\n\n            if (response.data.successMessage) {\n                console.log('Form submitted successfully:', response.data.successMessage);\n\n                const { userId, userName } = response.data;\n\n                console.log(\"가지고 가는 유저 아이디와 이름 : \")\n                console.log(userId,userName);\n\n                // 로그인 성공 - 서버로 사용자ID 전송\n                sendUserIdToServer(login.userId);\n\n                localStorage.setItem(\"isLoggedIn\", true);\n                dispatch(loginAction({\n                    userId: login.userId,\n                    userName: login.userName, // userName 정보를 Redux 상태에 저장 , 해당 부분의 login은 현재페이지의 값 아닌가?\n                }));\n\n\n                navigate(\"/\");\n            }\n\n        } catch (error) {\n            if (error.response) {\n                // 서버 응답이 에러인 경우\n                console.error('Error submitting form:', error.response.data);\n                // 에러 메시지가 있는 경우, 해당 메시지를 alert 창에 표시\n\n                alert(JSON.parse(error.response.data));\n                return;\n\n                // alert(error.response.data);\n                // 클라이언트에서 에러 메시지 처리 로직 추가\n            } else if (error.request) {\n                // 요청이 전혀 이루어지지 않은 경우\n                console.error('Request error:', error.request);\n            } else {\n                // 기타 에러\n                console.error('Unexpected error:', error.message);\n            }\n          }\n\n    }\n    return(\n      <>\n      <BasicLaylout>\n      <div className=\"loginBox\">\n        <h1><b>로그인</b></h1>\n\n            <Form onSubmit={handleSubmit}>\n            <span className=\"formName\">아이디</span>\n            <input className=\"formInfo\" type=\"text\" id=\"id_val\" placeholder=\"아이디를 입력해주세요\" name=\"userId\" value={login.userId} onChange={handleInputChange}></input>\n\n            <span className=\"formName\">비밀번호</span>\n            <input className=\"formInfo\" type=\"password\" id=\"password_val\" placeholder=\"비밀번호를 입력해주세요\" name=\"password\" value={login.password} onChange={handleInputChange}></input>\n\n\n\n          <div className=\"loginBtn\">\n           <button className=\"s_bt\" type=\"submit\" >로그인</button>\n            </div>\n\n            </Form>\n\n        <Link to={\"/host/login\"} className=\"another-login\">호스트로 로그인하기</Link>\n\n      <span className=\"choiceNewmember\">아직 회원이 아니신가요?</span>\n      <div className=\"newmember\">\n          <button className=\"another-btn\"><Link to={\"/host/new\"} >호스트 회원가입</Link></button>\n          <button className=\"another-btn\"><Link to={\"/user/new\"} >게스트 회원가입</Link></button>\n      </div>\n\n      </div>\n      </BasicLaylout>\n      </>\n    )\n\n}\nexport default UserLoginPage;\n\n"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userName","isHostLoggedIn","hostLogin","hostNum","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","placeholder","initState","userId","password","UserLoginPage","setLogin","useState","useEffect","getItem","handleInputChange","e","name","value","target","prevLogin","BasicLaylout","Form","onSubmit","async","preventDefault","response","axios","post","data","alertMessage","alert","successMessage","console","log","error","sendUserIdToServer","setItem","loginAction","JSON","parse","request","message","onChange","Link","to"],"sourceRoot":""}