{"version":3,"file":"static/js/930.fbba2ba2.chunk.js","mappings":"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","sources":["layouts/BasicLayout.js","pages/profile/UserProfile.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport \"./BasicLayout.css\"\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../slices/loginSlice\";\nimport { hostLogout }from \"../slices/hostLoginSlice\";\n\nconst BasicLayout = ({children}) => {\n\n        const navigate = useNavigate();\n        const dispatch = useDispatch()\n\n        const isLoggedIn = useSelector((state) => state.login.isLoggedIn);\n        const userId = useSelector((state) => state.login.userId);\n        const userName = useSelector((state) => state.login.userName);\n\n        const isHostLoggedIn = useSelector((state) => state.hostLogin.isHostLoggedIn);\n        const hostNum = useSelector((state) => state.hostLogin.hostNum);\n\n        const handleClickLogout =()=>{\n             localStorage.removeItem(\"isLoggedIn\");\n             dispatch(logout());\n             navigate(\"/\");\n         }\n\n    const handleClickHostLogout =()=>{\n        localStorage.removeItem(\"isHostLoggedIn\");\n        dispatch(hostLogout());\n        navigate(\"/\");\n    }\n\n    return(\n    <>\n    \n    <header>\n    <nav className=\"navbar navbar-expand-lg\" id=\"nav\" >\n    <div className=\"container-fluid\" id=\"nav-form\">\n      <a href={'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      < ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a href={'/about'} className=\"nav-link active\" aria-current=\"page\" >About Us</a>\n        </li>\n\n\n\n          {/*   !가 붙어있어야 로그인전 화면에 노출 ! */}\n\n\n\n          {/* User */}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n          <>\n        <li className=\"nav-item\">\n          <a href={'/myPage'} className=\"nav-link\">My Page</a>\n        </li>\n       </>\n        :<></>}\n\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickLogout}>Logout</a>\n                  </li>\n               </>\n              :<></>}\n          {/*로그인한 사용자에게만 보이게*/}\n          { isLoggedIn ?\n              <>\n          <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" >\n                  ${userName}님, 반가워요! // ${userId}님, 반가워요!\n              </a>\n          </li>\n              </>\n              :<></>}\n\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\n          {( !isLoggedIn  &&  !isHostLoggedIn )?\n              <>\n        <li className=\"nav-item\">\n          <a href=\"/user/login\" className=\"nav-link\" >Login</a>\n        </li>\n              </>: <></>}\n\n\n          {/* Host */}\n\n\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href={'/host/myPage'} className=\"nav-link\">My Page</a>\n                  {/*    레슨 파일보고 페이지 맞게 연결*/}\n                  </li>\n              </>\n              :<></>}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          {/*{ isHostLoggedIn ?*/}\n          {/*    <>*/}\n          {/*        <li className=\"nav-item\">*/}\n          {/*            <a href={'/lesson/main'} className=\"nav-link\">My Class</a>*/}\n          {/*            /!*    레슨 파일보고 페이지 맞게 연결*!/*/}\n          {/*        </li>*/}\n          {/*    </>*/}\n          {/*    :<></>}*/}\n\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a href=\"/\" className=\"nav-link\" onClick={handleClickHostLogout}>Logout</a>\n                  </li>\n              </>\n              :<></>}\n          {/*로그인한 호스트에게만 보이게*/}\n          { isHostLoggedIn ?\n              <>\n                  <li className=\"nav-item\">\n                      <a className=\"nav-link active\" aria-current=\"page\" >{hostNum}님, 반가워요!</a>\n                  </li>\n           </>\n              :<></>}\n\n\n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n </nav>\n <hr/>\n    </header>\n\n\n          <main>\n            {children}\n          </main>\n\n    <footer>\n    <hr/>\n      <div className=\"footer-body\">\n        <span><b>(주)원데이씨드</b> <br/>\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\n         </span> <br/>\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\n        </span>\n        <br/><br/><br/><br/>\n      </div>   \n    </footer>\n\n\n    </>\n\n  )\n}\nexport default BasicLayout;","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './userProfile.css';\nimport BasicLayout from \"../../layouts/BasicLayout\"\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nfunction Profile() {\n    const [users, setUsers] = useState({});\n\n    const navigate = useNavigate();\n\n\n    const fetchData = async () => {\n      try {\n          const response = await axios.get('/api/user');\n          setUsers(response.data);\n      } catch (error) {\n          console.error('Error fetching user details:', error);\n      }\n    };\n  \n    useEffect(() => {\n      fetchData();\n    }, []);\n  \n    const handleInputChange = (e) => {\n      const { name, value } = e.target;\n      setUsers((prevUsers) => ({\n        ...prevUsers,\n        [name]: value,\n      }));\n    };\n\n\n\n  \n    const handleSubmit = async (e) => {\n      e.preventDefault(); // 기본 폼 제출 방지\n      \n      try {\n        const response = await axios.post('/api/user', {\n        userId: users.userId,\n        userName: users.userName,\n        password: users.password,\n        phoneNum: users.phoneNum,\n      });\n\n        if (response.data.alertMessage) {\n          // 에러 또는 성공 메시지가 있으면 alert 창 띄우기\n          alert(response.data.alertMessage);\n        }\n    \n        if (response.data.successMessage) {\n          console.log('Form submitted successfully:', response.data.successMessage);\n          fetchData();\n          navigate(\"/myPage\");\n        }\n      } catch (error) {\n          if (error.response) {\n            // 서버 응답이 에러인 경우\n            console.error('Error submitting form:', error.response.data);\n            // 클라이언트에서 에러 메시지 처리 로직 추가\n          } else if (error.request) {\n            // 요청이 전혀 이루어지지 않은 경우\n            console.error('Request error:', error.request);\n          } else {\n            // 기타 에러\n            console.error('Unexpected error:', error.message);\n          }\n      }\n    };\n  \n    return (\n      <div>\n        <BasicLayout>\n        <h1 id=\"title\">프로필 관리</h1>\n        {/* <img src=\"/profile.jpg\" width=\"200px\" height=\"200px\" alt=\"프로필 이미지\" /> */}\n        \n        <Form onSubmit={handleSubmit}>\n          {/* <Form.Group controlId=\"formFileSm\" className=\"mb-3\">\n            <Form.Label>사진 수정</Form.Label>\n            <Form.Control type=\"file\" size=\"sm\" />\n          </Form.Group> */}\n          <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n            <Form.Label>아이디</Form.Label>\n            <Form.Control type=\"text\" name=\"userId\" value={users.userId} disabled />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n            <Form.Label>비밀번호</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={users.password || ''}\n              placeholder=\"Enter New Password\"\n              onChange={handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n            <Form.Label>이름</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"userName\"\n              value={users.userName || ''}\n              placeholder=\"Name\"\n              onChange={handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formGroupPhone\">\n            <Form.Label>핸드폰번호</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"phoneNum\"\n              value={users.phoneNum || ''}\n              placeholder=\"- 없이 입력해주세요\"\n              onChange={handleInputChange}\n            />\n          </Form.Group>\n          <Button id=\"modify\" variant=\"primary\" type=\"submit\">\n            수정완료\n          </Button>\n        </Form>\n        </BasicLayout>\n      </div>\n    );\n  }\n  \n  export default Profile;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["_ref","children","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","login","userId","userName","isHostLoggedIn","hostLogin","hostNum","_jsxs","_Fragment","_jsx","className","id","href","type","onClick","handleClickLogout","localStorage","removeItem","logout","handleClickHostLogout","hostLogout","role","placeholder","users","setUsers","useState","fetchData","async","response","axios","get","data","error","console","useEffect","handleInputChange","e","name","value","target","prevUsers","BasicLayout","Form","onSubmit","preventDefault","post","password","phoneNum","alertMessage","alert","successMessage","log","request","message","Group","controlId","Label","Control","disabled","onChange","Button","variant","_excluded","useButtonProps","_ref2","tagName","rel","tabIndex","meta","handleClick","event","trim","isTrivialHref","stopPropagation","undefined","onKeyDown","key","React","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","size","active","prefix","useBootstrapPrefix","classNames","concat"],"sourceRoot":""}