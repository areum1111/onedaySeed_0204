{"version":3,"file":"static/js/3.be8e26ec.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","layouts/BasicLayout.js","pages/login/NewUserPage.js"],"sourcesContent":["import {createSearchParams, Navigate, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginPostAsync, logout} from \"../slices/loginSlice\";\r\n\r\nconst useCustomLogin = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const loginState = useSelector(state => state.loginSlice) //로그인,로그아웃 했을 경우의 상태\r\n    const isLogin = loginState.userId ?true :false //로그인 여부\r\n    const doLogin = async (loginParam) => { //로그인 함수\r\n        const action = await dispatch(loginPostAsync(loginParam))\r\n\r\n        return action.payload\r\n    }\r\n\r\n    const doLogout =() => { //로그아웃 함수\r\n        dispatch(logout())\r\n    }\r\n\r\n    const moveToPath = (path) =>{ //페이지 이동\r\n        navigate({pathname:path},{replace:true})\r\n    }\r\n\r\n    const moveToLogin = () => { //로그인페이지로 이동\r\n        navigate({pathname:'/user/login'},{replace:true})\r\n    }\r\n\r\n    const moveToLoginReturn = () => { //로그인페이지로 이동 페이지(로그인해야지만 이용 가능한 페이지 클릭(이동시))\r\n        return<Navigate replace to=\"/user/login\" />\r\n    }\r\n\r\n    const exceptionHandle = (ex) =>{\r\n        console.log(\"Exception..........\")\r\n        console.log(ex)\r\n        const errorMsg = ex.response.data.error\r\n        const errorStr = createSearchParams({error:errorMsg}).toString()\r\n\r\n        if(errorMsg === 'REQUIRE_LOGIN'){\r\n            alert(\"로그인을 진행해주세요!\")\r\n            navigate({pathname:'/user/login',search:errorStr})\r\n            return\r\n        }\r\n        if(ex.response.data.error === \"ERROR_ACCESSDENIED\"){\r\n            alert(\"해당 메뉴를 사용할 권한이 없습니다.\")\r\n            navigate({pathname:'/user/login',search:errorStr})\r\n            return\r\n        }\r\n    }\r\n\r\n    return{loginState, isLogin, doLogin, doLogout, moveToPath, moveToLogin, moveToLoginReturn, exceptionHandle}\r\n}\r\nexport default useCustomLogin;","import { Link } from \"react-router-dom\";\r\nimport \"./BasicLayout.css\"\r\nimport BasicMenu from \"../components/menus/BasicMenu.js\";\r\nimport {useSelector} from \"react-redux\";\r\nimport useCustomLogin from \"../hooks/useCustomLogin\";\r\n\r\nconst BasicLayout = ({children}) => {\r\n\r\n    const {doLogout, moveToPath} =useCustomLogin()\r\n\r\n const handleClickLogout =()=>{\r\n        doLogout()\r\n     alert(\"로그아웃되었습니다.\")\r\n     moveToPath(\"/\")\r\n }\r\n\r\n    const loginState = useSelector(state => state.loginSlice)\r\n  return(\r\n    <>\r\n    \r\n    <header>\r\n    <nav class=\"navbar navbar-expand-lg\" id=\"nav\" >\r\n    <div class=\"container-fluid\" id=\"nav-form\">\r\n      <Link to = {'/'} className=\"navbar-brand\" id='logo'>OnedaySeed</Link>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      < ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <Link to={'/about'} class=\"nav-link active\" aria-current=\"page\" >About Us</Link>\r\n        </li>\r\n\r\n          {/*로그인한 사용자에게만 보이게*/}\r\n          {loginState.id ?\r\n          <>\r\n        <li class=\"nav-item\">\r\n          <Link to={'/mypage'} class=\"nav-link\">My Page</Link>\r\n        </li>\r\n      </>\r\n        :<></>}\r\n\r\n          {/*로그인한 사용자에게만 보이게*/}\r\n          {loginState.id ?\r\n              <>\r\n                  <li class=\"nav-item\">\r\n                      <a onClick={handleClickLogout} className=\"nav-link\">Logout</a>\r\n                  </li>\r\n              </>\r\n              :<></>}\r\n\r\n\r\n\r\n        {/* 로그인 전 사용자에게 '로그인' 보이게 */}\r\n          { ! loginState.id?\r\n              <>\r\n        <li class=\"nav-item\">\r\n          <Link to={\"/user/login\"} className=\"nav-link disabled\" aria-disabled=\"true\" >Login</Link>\r\n        </li>\r\n              </>: <></> }\r\n\r\n          \r\n      </ul>\r\n      <form class=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2 \" id=\"search-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success \" id='search-btn' type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n </nav>\r\n <hr/>\r\n    </header>\r\n\r\n\r\n          <main>\r\n            {children}\r\n          </main>\r\n\r\n    <footer>\r\n    <hr/>\r\n      <div className=\"footer-body\">\r\n        <span><b>(주)원데이씨드</b> <br/>\r\n        <span className=\"our-info\">서울시 종로구 인사동길 12 15층 <br/>\r\n         사업자등록번호 : 135-87-***** | 통신판매업 : 신고번호 제2024-서울종로-987**호  <br/>\r\n         </span> <br/>\r\n         <span className=\"not-host\">(주)원데이씨드는 통신판매중개자이며, 통신판매의 당사자가 아닙니다. 상품, 상품정보, 거래에 관한 의무와 책임은 판매자에게 있습니다.</span>\r\n        </span>\r\n        <br/><br/><br/><br/>\r\n      </div>   \r\n    </footer>\r\n\r\n\r\n    </>\r\n\r\n  )\r\n}\r\nexport default BasicLayout;","import BasicLaylout from \"../../layouts/BasicLayout\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport \"./LoginForm.css\"\r\nimport axios from \"axios\";\r\n\r\nconst NewUserPage=()=>{\r\n\r\n    const [newMember,setNewMember] = useState({});\r\n\r\n    const fetchData = async ()=> {\r\n        try{\r\n            const response = await axios.get(\"/api/new\");\r\n            setNewMember(response.data)\r\n        }catch(error){\r\n            console.log(\"Error fetching new user info : \", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // 기본 폼 제출 방지\r\n\r\n        try {\r\n            const response = await axios.post(\"/api/new\", {\r\n                userId: newMember.userId,\r\n                userPassword: newMember.userPassword,\r\n                userName: newMember.userName,\r\n                userPhoneNum: newMember.userPhoneNum\r\n            });\r\n\r\n            if (response.data.alertMessage) {\r\n                alert(response.data.alertMessage);\r\n            }\r\n            if (response.data.successMsg) {\r\n                console.log(\"'Form submitted successfully:', response.data.successMessage\");\r\n                fetchData();\r\n            }\r\n        }catch (error){\r\n            if(error.response){\r\n                // 서버 응답이 에러인 경우\r\n                console.error('Error submitting form:', error.response.data);\r\n            }else if (error.request) {\r\n                // 요청이 전혀 이루어지지 않은 경우\r\n                console.error('Request error:', error.request);\r\n            } else {\r\n                // 기타 에러\r\n                console.error('Unexpected error:', error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return(\r\n      <BasicLaylout>\r\n      <div class=\"loginBox\">\r\n        <h1>회원가입</h1>\r\n        \r\n            <span className=\"formName\">아이디</span>\r\n            <input className=\"formInfo\" type=\"text\" id=\"id_val\" placeholder=\"아이디를 입력해주세요\" value={newMember.userId}/>\r\n       \r\n            <span className=\"formName\">비밀번호</span>\r\n            <input className=\"formInfo\" type=\"text\" id=\"password_val\" placeholder=\"비밀번호를 입력해주세요\" value={newMember.userPassword}/>\r\n\r\n            <span className=\"formName\" >이름</span>\r\n            <input className=\"formInfo\" type=\"text\" id=\"name_val\" placeholder=\"이름을 입력해주세요\" value={newMember.userName} />\r\n\r\n            <span className=\"formName\">전화번호</span>\r\n          <input className=\"formInfo\" type=\"text\" id=\"phoneNum_val\" placeholder=\"전화번호를 입력해주세요\" value={newMember.userPhoneNum} />\r\n\r\n        <div className=\"loginBtn\">\r\n          <button type=\"submit\" >회원가입</button>\r\n        </div> \r\n\r\n      </div>\r\n</BasicLaylout>\r\n      \r\n    );\r\n    }\r\nexport default NewUserPage;"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","userId","doLogin","async","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","_jsx","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","createSearchParams","toString","alert","search","_ref","children","_jsxs","_Fragment","class","id","Link","className","type","onClick","handleClickLogout","role","placeholder","NewUserPage","newMember","setNewMember","useState","fetchData","axios","get","useEffect","BasicLaylout","value","userPassword","userName","userPhoneNum"],"sourceRoot":""}